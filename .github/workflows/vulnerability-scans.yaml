# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Vulnerability Scan

on:
  workflow_dispatch:
  release:
  schedule:
    - cron: '00 9 * * 1'

permissions:
  contents: read
  security-events: write

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.version.outputs.TAGS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Latest Tag
        id: version
        shell: bash
        run: |
          readarray -t TAGS_ARRAY <<<"$(git tag --list 'controller-v*.*.*' --sort=-version:refname | grep -v 'beta\|alpha')"
          FULL_TAGS=(${TAGS_ARRAY[0]} ${TAGS_ARRAY[1]} ${TAGS_ARRAY[2]})
          SHORT_TAGS=()
          for i in ${FULL_TAGS[@]}
          do
            echo "tag: $i"
            short=$(echo "$i" | cut -d - -f 2)
            SHORT_TAGS+=($short)
          done
          echo "${SHORT_TAGS[0]},${SHORT_TAGS[1]},${SHORT_TAGS[2]}"
          TAGS_JSON="[\"${SHORT_TAGS[0]}\",\"${SHORT_TAGS[1]}\",\"${SHORT_TAGS[2]}\"]"
          echo "${TAGS_JSON}"
          echo "TAGS=${TAGS_JSON}" >> $GITHUB_OUTPUT

  scan:
    runs-on: ubuntu-latest
    needs: version
    strategy:
      matrix:
        versions: ${{ fromJSON(needs.version.outputs.versions) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - shell: bash
        id: test
        run: echo "Scanning registry.k8s.io/ingress-nginx/controller@${{ matrix.versions }}"

      - name: Scan image with AquaSec/Trivy
        id: scan
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8 # v0.24.0
        with:
          image-ref: registry.k8s.io/ingress-nginx/controller:${{ matrix.versions }}
          format: 'sarif'
          output: trivy-results-${{ matrix.versions }}.sarif
          exit-code: 0
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW,UNKNOWN'

      - name: Output Sarif File
        shell: bash
        run: cat ${{ github.workspace }}/trivy-results-${{ matrix.versions }}.sarif

      # This step checks out a copy of your repository.
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@6db8d6351fd0be61f9ed8ebd12ccd35dcec51fea # v3.26.11
        with:
          token: ${{ github.token }}
          # Path to SARIF file relative to the root of the repository
          sarif_file: ${{ github.workspace }}/trivy-results-${{ matrix.versions }}.sarif

      - name: Vulz Count
        shell: bash
        run: |
          TRIVY_COUNT=$(cat ${{ github.workspace }}/trivy-results-${{ matrix.versions }}.sarif | jq '.runs[0].results | length')
          echo "TRIVY_COUNT: $TRIVY_COUNT"
          echo "Image Vulnerability scan output" >> $GITHUB_STEP_SUMMARY
          echo "Image ID: registry.k8s.io/ingress-nginx/controller@${{ matrix.versions }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Trivy Count: $TRIVY_COUNT" >> $GITHUB_STEP_SUMMARY
